{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Field","props","nameOfClass","marked","react_default","a","createElement","className","onClick","onContextMenu","value","window","addEventListener","e","preventDefault","Board","num","_this","this","fields","board","i","row","j","push","newField","Component","arrayFilled","size","bombs","Array","fill","tmp","position","Math","floor","random","App","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","marks","clicked","counter","stat","banner","clickHandler","bind","assertThisInitialized","contextMenuHandler","neighborBombs","setState","_this3","App_Board","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf3ada48.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nwindow.addEventListener(\"contextmenu\", e => {\n  e.preventDefault();\n});\n\nfunction Field(props)\n{\n\tlet nameOfClass;\n\tif(props.marked === true)\n\t{\n\t\tnameOfClass = \"markedField\";\n\t}\n\telse\n\t{\n\t\tnameOfClass = \"unmarkedField\";\n\t}\t\t\n\t\treturn (\n\t\t\t<button className={nameOfClass} onClick={props.onClick} onContextMenu={props.onContextMenu}>\n\t\t\t\t{props.value}\n\t\t\t</button>\n\t\t)\n}\n\nclass Board extends Component\n{\n\tnewField(num)\n\t{\n\t\treturn ( <Field \n\t\t\tmarked={this.props.marked[num]} \n\t\t\tvalue={this.props.fields[num]} \n\t\t\tonClick={() => this.props.onClick(num)} \n\t\t\tonContextMenu={() => {this.props.onContextMenu(num)}} \n\t\t/> );\n\t}\n\t\n\trender()\n\t{\n\t\tconst board = [];\n\t\tfor(let i = 0; i < 10; i++)\n\t\t{\n\t\t\tlet row = [];\n\t\t\tfor(let j = 0; j < 10; j++)\n\t\t\t{\n\t\t\t\trow.push(this.newField((i*10)+j));\n\t\t\t}\n\t\t\tboard.push(<div className=\"row\">{row}</div>);\n\t\t}\n\t\treturn <div>{board}</div>;\n\t}\n}\n\nfunction arrayFilled(size)\n\t{\n\t\tlet bombs = Array(size).fill(false);\n\t\tlet tmp = 10;\n\t\twhile(tmp !== 0)\n\t\t{\n\t\t\tlet position = Math.floor(Math.random()*99);\n\t\t\tif(!bombs[position])\n\t\t\t{\n\t\t\t\ttmp--;\n\t\t\t\tbombs[position] = true;\n\t\t\t}\n\t\t}\n\t\treturn bombs;\n\t}\n\nclass App extends Component {\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfields: Array(100).fill(true),\n\t\t\tmarks: 10,\n\t\t\tclicked: Array(100).fill(false),\n\t\t\tbombs: arrayFilled(100),\n\t\t\tmarked: Array(100).fill(false),\n\t\t\tcounter: 0,\n\t\t\tstat: true,\n\t\t\tbanner: 'Póki co żyjesz'\n\t\t}\n\t\tthis.clickHandler = this.clickHandler.bind(this);\n\t\tthis.contextMenuHandler = this.contextMenuHandler.bind(this);\n\t}\n\t\n\tclickHandler(i)\n\t{\n\t\tlet clicked = this.state.clicked;\n\t\tlet fields = this.state.fields;\n\t\tlet counter = this.state.counter;\n\t\tlet stat = this.state.stat;\n\t\tlet banner = this.state.banner;\n\t\tif(clicked[i] || !stat)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(this.state.marked[i] === false && this.state.bombs[i] === false)\n\t\t{\n\t\t\tlet neighborBombs = 0;\n\t\t\tif(i-10 >= 0 && this.state.bombs[i-10] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\tif(i+10 <= 99 && this.state.bombs[i+10] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\t\n\t\t\tif(i%10 !== 0 && this.state.bombs[i-1] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\tif(i%10 !== 9 && this.state.bombs[i+1] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\t\n\t\t\tif(i%10 !== 0 && i-11 >= 0 && this.state.bombs[i-11] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\tif(i%10 !== 9 && i+11 <= 99 && this.state.bombs[i+11] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\t\n\t\t\tif(i%10 !== 9 && i-9 >= 0 && this.state.bombs[i-9] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\tif(i%10 !== 0 && i+9 <= 99 && this.state.bombs[i+9] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\t\n\t\t\tfields[i] = neighborBombs;\n\t\t\tclicked[i] = true;\n\t\t\tcounter++;\n\t\t}\n\t\telse if(this.state.marked[i] === false && this.state.bombs[i] === true)\n\t\t{\n\t\t\tstat = false;\n\t\t\tclicked[i] = true;\n\t\t\tfields[i] = '#';\n\t\t\tcounter++;\n\t\t\tbanner = 'Bardzo się starałeś, lecz grę przerypałeś'\n\t\t}\n\t\t\n\t\tif(counter === 100)\n\t\t{\n\t\t\tbanner = 'Brawo! Zwycięstwo!';\n\t\t\tstat = false;\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\tfields: fields,\n\t\t\tclicked: clicked,\n\t\t\tcounter: counter,\n\t\t\tstat: stat,\n\t\t\tbanner: banner,\n\t\t});\n\t}\n\t\n\tcontextMenuHandler(i)\n\t{\n\t\tlet clicked = this.state.clicked;\n\t\tlet marked = this.state.marked;\n\t\tlet counter = this.state.counter;\n\t\tlet marks = this.state.marks;\n\t\tlet banner = this.state.banner;\n\t\tlet stat = this.state.stat;\n\t\t\n\t\tif(clicked[i] && !marked[i] && this.state.fields !== null){\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(!stat)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(!marked[i] && marks > 0)\n\t\t{\n\t\t\tmarked[i] = true;\n\t\t\tclicked[i] = true;\n\t\t\tcounter++;\n\t\t\tmarks--;\n\t\t}\n\t\telse if(marked[i])\n\t\t{\n\t\t\tmarked[i] = false;\n\t\t\tclicked[i] = false;\n\t\t\tcounter--;\n\t\t\tmarks++;\n\t\t}\n\t\t\n\t\tif(counter === 100)\n\t\t{\n\t\t\tbanner = 'Brawo! Zwycięstwo!';\n\t\t\tstat = false;\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\tmarked: marked,\n\t\t\tclicked: clicked,\n\t\t\tcounter: counter,\n\t\t\tmarks: marks,\n\t\t\tstat: stat,\n\t\t\tbanner: banner,\n\t\t});\n\t\t\n\t\treturn;\n\t}\n\t\n  render() {\n    return (\n\t<div>\n\t\t<div>{this.state.banner} <br /> Ilość znaczników do wykorzystania: {this.state.marks} <br /></div>\n      <Board \n\t\tfields={this.state.fields} \n\t\tonClick={(i) => this.clickHandler(i)} \n\t\tonContextMenu={(i) => {this.contextMenuHandler(i)}} \n\t\tmarked={this.state.marked} \n\t  />\n\t</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
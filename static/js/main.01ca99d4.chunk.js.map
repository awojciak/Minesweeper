{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Field","props","nameOfClass","marked","react_default","a","createElement","className","onClick","onContextMenu","value","Timer","time","Board","num","_this","this","fields","e","board","i","row","j","push","newField","Component","arrayFilled","size","bombs","Array","fill","tmp","position","Math","floor","random","Refresh","App","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","marks","clicked","counter","stat","banner","clickHandler","bind","assertThisInitialized","contextMenuHandler","_this3","timerID","setInterval","tick","clearInterval","setState","document","location","reload","neighborBombs","preventDefault","_this4","refreshHandler","id","App_Board","Boolean","window","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01ca99d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nfunction Field(props)\n{\n\tlet nameOfClass;\n\tif(props.marked === true)\n\t{\n\t\tnameOfClass = \"markedField\";\n\t}\n\telse\n\t{\n\t\tnameOfClass = \"unmarkedField\";\n\t}\t\t\n\t\treturn (\n\t\t\t<button className={nameOfClass} onClick={props.onClick} onContextMenu={props.onContextMenu}>\n\t\t\t\t{props.value}\n\t\t\t</button>\n\t\t)\n}\n\nfunction Timer(props)\n{\n\treturn (\n\t\t<div className=\"timer\">\n\t\t\t{props.time}\n\t\t</div>\n\t);\n}\n\nclass Board extends Component\n{\n\tnewField(num)\n\t{\n\t\treturn ( <Field \n\t\t\tmarked={this.props.marked[num]} \n\t\t\tvalue={this.props.fields[num]} \n\t\t\tonClick={() => this.props.onClick(num)} \n\t\t\tonContextMenu={(e) => {this.props.onContextMenu(num, e)}} \n\t\t/> );\n\t}\n\t\n\trender()\n\t{\n\t\tconst board = [];\n\t\tfor(let i = 0; i < 10; i++)\n\t\t{\n\t\t\tlet row = [];\n\t\t\tfor(let j = 0; j < 10; j++)\n\t\t\t{\n\t\t\t\trow.push(this.newField((i*10)+j));\n\t\t\t}\n\t\t\tboard.push(<div className=\"row\">{row}</div>);\n\t\t}\n\t\treturn <div>{board}</div>;\n\t}\n}\n\nfunction arrayFilled(size)\n\t{\n\t\tlet bombs = Array(size).fill(false);\n\t\tlet tmp = 15;\n\t\twhile(tmp !== 0)\n\t\t{\n\t\t\tlet position = Math.floor(Math.random()*99);\n\t\t\tif(!bombs[position])\n\t\t\t{\n\t\t\t\ttmp--;\n\t\t\t\tbombs[position] = true;\n\t\t\t}\n\t\t}\n\t\treturn bombs;\n\t}\n\nfunction Refresh(props)\n{\n\treturn (\n\t\t<button className=\"refresh\" onClick={props.onClick}>\n\t\t\tNowa gra\n\t\t</button>\n\t);\n}\t\n\t\nclass App extends Component {\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfields: Array(100).fill(true),\n\t\t\tmarks: 15,\n\t\t\tclicked: Array(100).fill(false),\n\t\t\tbombs: arrayFilled(100),\n\t\t\tmarked: Array(100).fill(false),\n\t\t\tcounter: 0,\n\t\t\tstat: true,\n\t\t\tbanner: 'Póki co żyjesz',\n\t\t\ttime: 0,\n\t\t}\n\t\tthis.clickHandler = this.clickHandler.bind(this);\n\t\tthis.contextMenuHandler = this.contextMenuHandler.bind(this);\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(() => this.tick(), 1000);\n\t}\n\t\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\t\n\ttick() {\n\t\tlet time = this.state.time + 1;\n\t\tif(this.state.stat === false)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({\n\t\t\ttime: time\n\t\t});\n\t}\n\t\n\trefreshHandler()\n\t{\n\t\tdocument.location.reload();\n\t}\n\t\n\tclickHandler(i)\n\t{\n\t\tlet clicked = this.state.clicked;\n\t\tlet fields = this.state.fields;\n\t\tlet counter = this.state.counter;\n\t\tlet stat = this.state.stat;\n\t\tlet banner = this.state.banner;\n\t\tif(clicked[i] || !stat)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(this.state.marked[i] === false && this.state.bombs[i] === false)\n\t\t{\n\t\t\tlet neighborBombs = 0;\n\t\t\tif(i-10 >= 0 && this.state.bombs[i-10] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\tif(i+10 <= 99 && this.state.bombs[i+10] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\t\n\t\t\tif(i%10 !== 0 && this.state.bombs[i-1] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\tif(i%10 !== 9 && this.state.bombs[i+1] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\t\n\t\t\tif(i%10 !== 0 && i-11 >= 0 && this.state.bombs[i-11] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\tif(i%10 !== 9 && i+11 <= 99 && this.state.bombs[i+11] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\t\n\t\t\tif(i%10 !== 9 && i-9 >= 0 && this.state.bombs[i-9] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\tif(i%10 !== 0 && i+9 <= 99 && this.state.bombs[i+9] === true)\n\t\t\t{\n\t\t\t\tneighborBombs++;\n\t\t\t}\n\t\t\t\n\t\t\tfields[i] = neighborBombs;\n\t\t\tclicked[i] = true;\n\t\t\tcounter++;\n\t\t}\n\t\telse if(this.state.marked[i] === false && this.state.bombs[i] === true)\n\t\t{\n\t\t\tstat = false;\n\t\t\tclicked[i] = true;\n\t\t\tfields[i] = '#';\n\t\t\tcounter++;\n\t\t\tbanner = 'Bardzo się starałeś, lecz grę przerypałeś'\n\t\t}\n\t\t\n\t\tif(counter === 100)\n\t\t{\n\t\t\tbanner = 'Brawo! Zwycięstwo!';\n\t\t\tstat = false;\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\tfields: fields,\n\t\t\tclicked: clicked,\n\t\t\tcounter: counter,\n\t\t\tstat: stat,\n\t\t\tbanner: banner,\n\t\t});\n\t}\n\t\n\tcontextMenuHandler(i, e)\n\t{\n\t\te.preventDefault();\n\t\tlet clicked = this.state.clicked;\n\t\tlet marked = this.state.marked;\n\t\tlet counter = this.state.counter;\n\t\tlet marks = this.state.marks;\n\t\tlet banner = this.state.banner;\n\t\tlet stat = this.state.stat;\n\t\t\n\t\tif(clicked[i] && !marked[i] && this.state.fields !== null){\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(!stat)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(!marked[i] && marks > 0)\n\t\t{\n\t\t\tmarked[i] = true;\n\t\t\tclicked[i] = true;\n\t\t\tcounter++;\n\t\t\tmarks--;\n\t\t}\n\t\telse if(marked[i])\n\t\t{\n\t\t\tmarked[i] = false;\n\t\t\tclicked[i] = false;\n\t\t\tcounter--;\n\t\t\tmarks++;\n\t\t}\n\t\t\n\t\tif(counter === 100)\n\t\t{\n\t\t\tbanner = 'Brawo! Zwycięstwo!';\n\t\t\tstat = false;\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\tmarked: marked,\n\t\t\tclicked: clicked,\n\t\t\tcounter: counter,\n\t\t\tmarks: marks,\n\t\t\tstat: stat,\n\t\t\tbanner: banner,\n\t\t});\n\t\t\n\t\treturn;\n\t}\n\t\n  render() {\n    return (\n\t<div>\n\t\t<div className=\"overtop\">\n\t\t\t<Refresh onClick={this.refreshHandler}/>\n\t\t</div>\n\t\t<div className=\"top\">\n\t\t\t<div id=\"banner\">\n\t\t\t\t{this.state.banner} <br /> Ilość znaczników do wykorzystania: {this.state.marks} <br />\n\t\t\t</div>\n\t\t\t<div id=\"time\">\n\t\t\t\t<Timer time={this.state.time}/>\n\t\t\t</div>\n\t\t</div>\n      <Board \n\t\tfields={this.state.fields} \n\t\tonClick={(i) => this.clickHandler(i)} \n\t\tonContextMenu={(i, e) => {this.contextMenuHandler(i, e)}} \n\t\tmarked={this.state.marked} \n\t  />\n\t</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}